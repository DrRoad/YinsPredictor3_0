install.packages("knitr")
Sys.time(); YinsPredictoR::yins_predictor('NFLX')
Sys.time(); YinsPredictoR::yins_predictor('NFLX', test.new.price = 100)
Sys.time(); YinsPredictoR::yins_predictor('NFLX')
rm(list=ls())
devtools::install_github("yiqiao-yin/YinsPredictoR")
# Install Packge using devtools
devtools::install_github("yiqiao-yin/YinsPredictor3_0")
# For example
Sys.time(); YinsPredictoR::yins_predictor('NFLX')
# For example
Sys.time(); YinsPredictoR::yins_predictor('FB')
# For example
Sys.time(); YinsPredictoR::yins_predictor('BIIB')
# For example
Sys.time(); YinsPredictoR::yins_predictor(
'NFLX'
)
# For example
Sys.time(); YinsPredictoR::yins_predictor('UNP')
# For example
Sys.time(); YinsPredictoR::yins_predictor('DIS')
# For example
Sys.time(); YinsPredictoR::yins_predictor('SBUX')
# For example
Sys.time(); YinsPredictoR::yins_predictor('AAPL')
# For example
Sys.time(); YinsPredictoR::yins_predictor('AMD')
# For example
Sys.time(); YinsPredictoR::yins_predictor('IBB')
# For example
Sys.time(); YinsPredictoR::yins_predictor('SHAK')
# For example
Sys.time(); YinsPredictoR::yins_predictor('CMG')
# For example
Sys.time(); YinsPredictoR::yins_predictor('BRK-B')
# For example
Sys.time(); YinsPredictoR::yins_predictor('BRK-a')
# For example
Sys.time(); YinsPredictoR::yins_predictor('LMT')
# For example
Sys.time(); YinsPredictoR::yins_predictor('BA')
# For example
Sys.time(); YinsPredictoR::yins_predictor('DIA')
# For example
Sys.time(); YinsPredictoR::yins_predictor('XLI')
RM(LIST=LS())
rm(list=ls())
library(YinsPredictoR)
rm(list=ls())
# Install Packge using devtools
devtools::install_github("yiqiao-yin/YinsPredictor3_0")
# For example
Sys.time(); YinsPredictoR::yins_predictor('NFLX')
# For example
Sys.time(); data <- YinsPredictoR::yins_predictor('NFLX', past.n.days = 100)
data$Raw.Buy.Sell.Signal.Table
# RL
BuyAction <- c()
BuyAction
# RL
BuyAction <- c(); SellAction <- c()
for (i in 1:nrow(data)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
}
}
i
for (i in 1:nrow(data)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
}
}
nrow(data)
# RL
BuyAction <- c(); SellAction <- c()
for (i in 1:nrow(data$Raw.Buy.Sell.Signal.Table)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
}
}
# Result
BuyAction
data$Raw.Buy.Sell.Signal.Table
dim(data$Raw.Buy.Sell.Signal.Table)
# RL
BuyAction <- c(); SellAction <- c()
for (i in 1:nrow(data$Raw.Buy.Sell.Signal.Table)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else { BuyAction[i] <- BuyAction[i-1] }
if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
} else {SellAction[i] <- SellAction[i-1] }
} # End of RL Training
# Result
BuyAction
# RL
BuyAction <- c(0); SellAction <- c(0)
for (i in 1:nrow(data$Raw.Buy.Sell.Signal.Table)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else { BuyAction[i] <- BuyAction[i-1] }
if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
} else {SellAction[i] <- SellAction[i-1] }
} # End of RL Training
# RL
BuyAction <- c(); SellAction <- c()
for (i in 1:nrow(data$Raw.Buy.Sell.Signal.Table)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else { BuyAction[i] <- BuyAction[i-1] }
if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
} else {SellAction[i] <- SellAction[i-1] }
} # End of RL Training
# Result
BuyAction
SellAction
# Result
cbind(BuyAction, SellAction)
# Result
rowMeans(cbind(BuyAction, SellAction))
# For example
Sys.time(); data <- YinsPredictoR::yins_predictor('NFLX', past.n.days = 1000)
# RL
BuyAction <- c(); SellAction <- c()
for (i in 1:nrow(data$Raw.Buy.Sell.Signal.Table)) {
if (data$Raw.Buy.Sell.Signal.Table$BuySignal[i] > 0) {
print(paste0("There is a buy action."))
BuyAction[i] <- -data$Raw.Buy.Sell.Signal.Table[i,1]
} else { BuyAction[i] <- BuyAction[i-1] }
if (data$Raw.Buy.Sell.Signal.Table$SellSignal[i] > 0) {
print(paste0("There is a sell action."))
SellAction[i] <- data$Raw.Buy.Sell.Signal.Table[i,1]
} else {SellAction[i] <- SellAction[i-1] }
} # End of RL Training
# Result
rowMeans(cbind(BuyAction, SellAction))
# Result
data$Raw.Buy.Sell.Signal.Table$Value <- rowMeans(cbind(BuyAction, SellAction))
dygraphs::dygraph(data$Raw.Buy.Sell.Signal.Table)
dygraphs::dygraph(data$Raw.Buy.Sell.Signal.Table[, c(1,4)])
library(dygraphs)
dygraph(data$Raw.Buy.Sell.Signal.Table[, c(1,4)]) %>% dyRebase()
N <- nrow(data$Raw.Buy.Sell.Signal.Table)
N
dygraph(data$Raw.Buy.Sell.Signal.Table[(N-500):N, c(1,4)]) %>% dyRebase()
dygraph(data$Raw.Buy.Sell.Signal.Table[(N-700):N, c(1,4)]) %>% dyRebase()
rm(list=ls())
library(YinsPredictoR)
rm(list=ls())
library(YinsPredictoR)
